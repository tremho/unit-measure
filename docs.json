{"language":"javascript","client_name":"inchjs","args":[],"client_version":"0.4.1","git_repo_url":"git@github.com:tremho/unit-measure.git","branch_name":"main","objects":[{"comment":"/**\n* @description\n* Lookup table for common measurements and their associated compositions\n*\n* ### Basic Ratios\n* | common abbr. | full name | instance type | numerator unit | denominator unit\n* | -----------  | --------  | ------------- | -------------- | ----------------\n* | ratio | generic ratio | Ratio | UnitType.Count | UnitType.Count\n* | deg/sec | degrees per second | Ratio | UnitType.Degree | UnitType.Second\n* | rpm | revolutions per minute | Ratio | UnitType.Count | UnitType.Minute\n*\n* ### Densities\n* | common abbr. | full name | instance type | numerator unit | denominator unit\n* | -----------  | --------  | ------------- | -------------- | ----------------\n* | g/cc | grams per cubic centimeter |  Density |  UnitType.Gram |  UnitType.Milliliter\n* | g/ml | grams per milliliter | Density, UnitType.Gram |  UnitType.Milliliter\n* | kg/l | kilograms per liter | Density, UnitType.Kilogram |  UnitType.Liter\n* | oz/fl.oz | ounces per fluid ounce |  Density |  UnitType.Ounce |  UnitType.FluidOunce\n* | lb/gal | pounds per gallon |  Density, UnitType.Pound |  UnitType.Gallon]\n* | g/tsp | grams per teaspoon |  Density, UnitType.Gram |  UnitType.Teaspoon\n* | g/tbsp | grams per tablespoon |  Density |  UnitType.Gram |  UnitType.Tablespoon\n\n*\n* ### speeds\n* | common abbr. | full name | instance type | numerator unit | denominator unit |\n* | -----------  | --------  | ------------- | -------------- | ---------------- |\n* | mph | miles per hour | Speed | UnitType.Mile | UnitType.Hour\n* | kph | kilometers per hour | Speed | UnitType.Kilometer | UnitType.Hour\n* | mps | meters per second | Speed | UnitType.Meter | UnitType.Second\n* | fps | feet per second | Speed | UnitType.Foot | UnitType.Second\n*\n* ### Fuel Efficiencies\n* | common abbr. | full name | instance type | numerator unit | denominator unit |\n* | -----------  | --------  | ------------- | -------------- | ---------------- |\n* | mpg | miles per gallon | FuelEfficiency | UnitType.Mile | UnitType.Gallon\n* | kpg | kilometers per gallon | FuelEfficiency |UnitType.Kilometer | UnitType.Gallon\n* | kpl | kilometers per liter | FuelEfficiency | UnitType.Kilometer | UnitType.Liter\n* | mpl | meters per liter | FuelEfficiency | UnitType.Meter | UnitType.Liter\n* | l/100km | liters per 100km | FuelEfficiency | UnitType.OneHundredKm | UnitType.Liter\n*\n* ### Accelerations\n* | common abbr. | full name | instance type | numerator unit | denominator unit |\n* | -----------  | --------  | ------------- | -------------- | ---------------- |\n* | m/s2 | meters per second squared | Acceleration | UnitType.Meter | UnitType.Second\n* | mps/sec | meters per second squared | Acceleration | UnitType.Meter | UnitType.Second\n* | ft/s2 | feet per second squared | Acceleration | UnitType.Foot | UnitType.Second\n* | fps/sec | feet per second squared | Acceleration | UnitType.Foot | UnitType.Second\n*\n* @alias NameMapRatio\n* @class\n*/","meta":{"range":[3417,8211],"filename":"NameMapRatio.js","lineno":62,"columnno":4,"path":"/build/npm/src","code":{"id":"astnode100000051","name":"NameMapRatio","type":"ObjectExpression","value":"{\"undefined\":\"\",\"makeFrom\":\"\"}"}},"description":"Lookup table for common measurements and their associated compositions\n\n### Basic Ratios\n| common abbr. | full name | instance type | numerator unit | denominator unit\n| -----------  | --------  | ------------- | -------------- | ----------------\n| ratio | generic ratio | Ratio | UnitType.Count | UnitType.Count\n| deg/sec | degrees per second | Ratio | UnitType.Degree | UnitType.Second\n| rpm | revolutions per minute | Ratio | UnitType.Count | UnitType.Minute\n\n### Densities\n| common abbr. | full name | instance type | numerator unit | denominator unit\n| -----------  | --------  | ------------- | -------------- | ----------------\n| g/cc | grams per cubic centimeter |  Density |  UnitType.Gram |  UnitType.Milliliter\n| g/ml | grams per milliliter | Density, UnitType.Gram |  UnitType.Milliliter\n| kg/l | kilograms per liter | Density, UnitType.Kilogram |  UnitType.Liter\n| oz/fl.oz | ounces per fluid ounce |  Density |  UnitType.Ounce |  UnitType.FluidOunce\n| lb/gal | pounds per gallon |  Density, UnitType.Pound |  UnitType.Gallon]\n| g/tsp | grams per teaspoon |  Density, UnitType.Gram |  UnitType.Teaspoon\n| g/tbsp | grams per tablespoon |  Density |  UnitType.Gram |  UnitType.Tablespoon\n\n### speeds\n| common abbr. | full name | instance type | numerator unit | denominator unit |\n| -----------  | --------  | ------------- | -------------- | ---------------- |\n| mph | miles per hour | Speed | UnitType.Mile | UnitType.Hour\n| kph | kilometers per hour | Speed | UnitType.Kilometer | UnitType.Hour\n| mps | meters per second | Speed | UnitType.Meter | UnitType.Second\n| fps | feet per second | Speed | UnitType.Foot | UnitType.Second\n\n### Fuel Efficiencies\n| common abbr. | full name | instance type | numerator unit | denominator unit |\n| -----------  | --------  | ------------- | -------------- | ---------------- |\n| mpg | miles per gallon | FuelEfficiency | UnitType.Mile | UnitType.Gallon\n| kpg | kilometers per gallon | FuelEfficiency |UnitType.Kilometer | UnitType.Gallon\n| kpl | kilometers per liter | FuelEfficiency | UnitType.Kilometer | UnitType.Liter\n| mpl | meters per liter | FuelEfficiency | UnitType.Meter | UnitType.Liter\n| l/100km | liters per 100km | FuelEfficiency | UnitType.OneHundredKm | UnitType.Liter\n\n### Accelerations\n| common abbr. | full name | instance type | numerator unit | denominator unit |\n| -----------  | --------  | ------------- | -------------- | ---------------- |\n| m/s2 | meters per second squared | Acceleration | UnitType.Meter | UnitType.Second\n| mps/sec | meters per second squared | Acceleration | UnitType.Meter | UnitType.Second\n| ft/s2 | feet per second squared | Acceleration | UnitType.Foot | UnitType.Second\n| fps/sec | feet per second squared | Acceleration | UnitType.Foot | UnitType.Second","alias":"NameMapRatio","kind":"class","name":"NameMapRatio","longname":"NameMapRatio","scope":"global","params":[]},{"comment":"/**\n* Creates an appropriate compound Measure Ratio object for the given name and values\n*\n* @param {string} ratioName     Name of the ratio to match to\n* @param {number} value1        Value of the ratio, or the value of the numerator\n* @param {number} [value2=1]    Value of the denominator or undefined - to avoid a dangerous division by zero\n* @function makeFrom\n*\n* @returns {Ratio}\n*\n* @example\n*  let mySpeed = NameMapRatio.makeFrom('mph', 60, 1)\n*  let myMPG = NameMapRatio.makeFrom('mpg', 400, 14.5)\n*  mySpeed.getValue() // 60\n*  myMPG.getValue() // 27.59\n*\n*/","meta":{"filename":"NameMapRatio.js","lineno":93,"columnno":4,"path":"/build/npm/src","code":{}},"description":"Creates an appropriate compound Measure Ratio object for the given name and values","params":[{"type":{"names":["string"]},"description":"Name of the ratio to match to","name":"ratioName"},{"type":{"names":["number"]},"description":"Value of the ratio, or the value of the numerator","name":"value1"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"Value of the denominator or undefined - to avoid a dangerous division by zero","name":"value2"}],"kind":"function","name":"makeFrom","returns":[{"type":{"names":["Ratio"]}}],"examples":["let mySpeed = NameMapRatio.makeFrom('mph', 60, 1)\n let myMPG = NameMapRatio.makeFrom('mpg', 400, 14.5)\n mySpeed.getValue() // 60\n myMPG.getValue() // 27.59"],"longname":"makeFrom","scope":"global"},{"comment":"/**\n* Creates an appropriate compound Measure Ratio object for the given name and values\n*\n* @param {string} ratioName     Name of the ratio to match to\n* @param {number} value1        Value of the ratio, or the value of the numerator\n* @param {number} [value2=1]    Value of the denominator or undefined - to avoid a dangerous division by zero\n* @function makeFrom\n*\n* @returns {Ratio}\n*\n* @example\n*  let mySpeed = NameMapRatio.makeFrom('mph', 60, 1)\n*  let myMPG = NameMapRatio.makeFrom('mpg', 400, 14.5)\n*  mySpeed.getValue() // 60\n*  myMPG.getValue() // 27.59\n*\n*/","meta":{"range":[6983,8209],"filename":"NameMapRatio.js","lineno":110,"columnno":4,"path":"/build/npm/src","code":{"id":"astnode100000454","name":"makeFrom","type":"FunctionExpression"},"vars":{"value1":"NameMapRatio.makeFrom~value1","value2":"NameMapRatio.makeFrom~value2","n":"NameMapRatio.makeFrom~n","fullname":"NameMapRatio.makeFrom~fullname","ratioClass":"NameMapRatio.makeFrom~ratioClass","numType":"NameMapRatio.makeFrom~numType","denType":"NameMapRatio.makeFrom~denType"}},"undocumented":true,"name":"makeFrom","longname":"NameMapRatio.makeFrom","kind":"function","memberof":"NameMapRatio","scope":"static"},{"comment":"/**\n* @description\n* Finds the canonical UnitType measure for one of the mapped synonyms\n*\n* @param  {string}  unitIn - Unit string to match to a canonical UnitType\n* @returns {string}        Equivalent UnitType, or undefined\n*\n* @example\n*  let abbrevIn = 'cf'\n*  let canonType = NameMapUnit.resolveSynonym(abbrevIn)\n*  // canonType === UnitType.CubicFoot === 'ft3'\n*/","meta":{"range":[29389,29490],"filename":"NameMapUnit.js","lineno":630,"columnno":4,"path":"/build/npm/src","code":{"id":"astnode100002335","name":"resolveSynonym","type":"FunctionExpression"}},"description":"Finds the canonical UnitType measure for one of the mapped synonyms","params":[{"type":{"names":["string"]},"description":"Unit string to match to a canonical UnitType","name":"unitIn"}],"returns":[{"type":{"names":["string"]},"description":"Equivalent UnitType, or undefined"}],"examples":["let abbrevIn = 'cf'\n let canonType = NameMapUnit.resolveSynonym(abbrevIn)\n // canonType === UnitType.CubicFoot === 'ft3'"],"name":"resolveSynonym","longname":"NameMapUnit.resolveSynonym","kind":"function","memberof":"NameMapUnit","scope":"static"},{"comment":"/**\n* @description\n* Sets the provided Measure value with a new value expressed in a value that may be a synonym\n*\n* @param measure   {Measure} The Measure object to set\n* @param unitIn    {string} The unit to match to a canonical UnitType and set value as\n* @param value     {number} The value to set\n*\n* @example\n*  let myMeasure = new Length()\n*  NameMapUnit.setMeasureAs(myMeasure, 'feet', 6.4)\n*/","meta":{"range":[29957,30083],"filename":"NameMapUnit.js","lineno":645,"columnno":4,"path":"/build/npm/src","code":{"id":"astnode100002348","name":"setMeasureAs","type":"FunctionExpression"}},"description":"Sets the provided Measure value with a new value expressed in a value that may be a synonym","params":[{"type":{"names":["Measure"]},"description":"The Measure object to set","name":"measure"},{"type":{"names":["string"]},"description":"The unit to match to a canonical UnitType and set value as","name":"unitIn"},{"type":{"names":["number"]},"description":"The value to set","name":"value"}],"examples":["let myMeasure = new Length()\n NameMapUnit.setMeasureAs(myMeasure, 'feet', 6.4)"],"name":"setMeasureAs","longname":"NameMapUnit.setMeasureAs","kind":"function","memberof":"NameMapUnit","scope":"static"},{"comment":"/**\n* @description\n* Returns the value of the provided Measure in units expressed by the resolved synonym\n*\n* @param measure   {Measure} The Measure object to read\n* @param unitIn    {string} The unit to match to a canonical UnitType for value\n* @returns {number}  The value of this measure in resolved UnitType\n*\n* @example:\n*  let myMeasure = new Length(UnitType.Inch, 27)\n*  let feet = NameMapUnit.getMeasureAs(myMeasure, 'feet')\n*/","meta":{"range":[30584,30703],"filename":"NameMapUnit.js","lineno":660,"columnno":4,"path":"/build/npm/src","code":{"id":"astnode100002365","name":"getMeasureAs","type":"FunctionExpression"}},"description":"Returns the value of the provided Measure in units expressed by the resolved synonym","params":[{"type":{"names":["Measure"]},"description":"The Measure object to read","name":"measure"},{"type":{"names":["string"]},"description":"The unit to match to a canonical UnitType for value","name":"unitIn"}],"returns":[{"type":{"names":["number"]},"description":"The value of this measure in resolved UnitType"}],"tags":[{"originalTitle":"example:","title":"example:","text":"let myMeasure = new Length(UnitType.Inch, 27)\n let feet = NameMapUnit.getMeasureAs(myMeasure, 'feet')","value":"let myMeasure = new Length(UnitType.Inch, 27)\n let feet = NameMapUnit.getMeasureAs(myMeasure, 'feet')"}],"name":"getMeasureAs","longname":"NameMapUnit.getMeasureAs","kind":"function","memberof":"NameMapUnit","scope":"static"},{"comment":"/**\n* Creates a unit of the given type\n*\n* @param unitTypeString\n* @param initialValue\n* @returns {Measure}\n* @throws {Error} if unit type is unknown\n*\n* @example\n* let myMeasure = UnitFactory.createUnitObject('tsp', 7)\n* let asOz = myMeasure.getValueAs('fl.oz')\n* console.log(`7 teaspoons is ${asOz} fluid ounces`)\n*/","meta":{"range":[1420,6771],"filename":"UnitFactory.js","lineno":40,"columnno":4,"path":"/build/npm/src","code":{"id":"astnode100008092","name":"createUnitObject","type":"FunctionExpression"},"vars":{"initialValue":"UnitFactory.createUnitObject~initialValue","unitType":"UnitFactory.createUnitObject~unitType","measure":"UnitFactory.createUnitObject~measure"}},"description":"Creates a unit of the given type","params":[{"name":"unitTypeString"},{"name":"initialValue"}],"returns":[{"type":{"names":["Measure"]}}],"exceptions":[{"type":{"names":["Error"]},"description":"if unit type is unknown"}],"examples":["let myMeasure = UnitFactory.createUnitObject('tsp', 7)\nlet asOz = myMeasure.getValueAs('fl.oz')\nconsole.log(`7 teaspoons is ${asOz} fluid ounces`)"],"name":"createUnitObject","longname":"UnitFactory.createUnitObject","kind":"function","memberof":"UnitFactory","scope":"static"},{"comment":"/**\n* Contains the _canonical_ text tag abbreviations for UnitType values.\n* _See {@link NameMapUnit} for a list of recognized synonyms for each canonical type._\n*\n* These text tags are intentionally equivalent to the common abbreviated version of the\n* unit name that can be found in `NameMapUnit`\n*\n* @alias UnitType\n* @class\n* @static\n*\n* @property {string}  Count - count of physical entities\n* @property {string}  Each - same as Count\n* @property {string}  Dozen - 12 Count\n* @property {string}  Score - 20 Count\n* @property {string}  Brace - 2 Count\n* @property {string}  Pair -  2 Count\n* @property {string}  K - 1,000 Count\n* @property {string}  Meg - 1,000,000 Count\n* @property {string}  Gig - 1,000,000,000 Count\n* @property {string}  Lux - measure of light intensity\n* @property {string}  Ampere - measure of electric current\n* @property {string}  Milliampere - measure of small electric current\n* @property {string}  Volt - measure of electric voltage\n* @property {string}  Millivolt - measure of small electric voltage\n* @property {string}  Kilovolt - measure of large electric voltage\n* @property {string}  Degree - measure angular distance\n* @property {string}  Radian - measure angular distance based from pi\n* @property {string}  Microsecond - measure of very short amount of elapsed time\n* @property {string}  Millisecond - measure of short amount of elapsed time\n* @property {string}  Second - measure of an amount of elapsed time\n* @property {string}  Minute - measure of an amount of elapsed time equal to 60 seconds\n* @property {string}  Hour - measure of an amount of elapsed time equal to 60 minutes\n* @property {string}  Day - measure of an amount of elapsed time equal to 24 hours\n* @property {string}  Montrh - measure of an amount of elapsed time equal to 1/12th year\n* @property {string}  Year - measure of an amount of elapsed time equal to 365 days\n*\n* @property {string}  Celsius - measure of temperature in the metric system\n* @property {string}  Fahrenheit - measure of temperature in the English system\n* @property {string}  Kelvin - measure of temperature in terms from \"absolute zero\" in the metric system\n* @property {string}  Micrometer - measure of distance using the metric system\n* @property {string}  Millimeter - measure of distance using the metric system\n* @property {string}  Centimeter - measure of distance using the metric system\n* @property {string}  Meter - measure of distance using the metric system\n* @property {string}  Hectometer - measure of distance using the metric system\n* @property {string}  Kilometer - measure of distance using the metric system\n* @property {string}  OneHundredKm - measure of distance (100 km) using the metric system\n*\n* @property {string}  Inch - measure of distance using the US system\n* @property {string}  Foot - measure of distance using the US system\n* @property {string}  Yard -measure of distance using the US system\n* @property {string}  Mile - measure of distance using the US system\n*\n* @property {string}  Kilopascal - measure of pressure using the metric system\n* @property {string}  Megapascal - measure of pressure using the metric system\n* @property {string}  PoundsPerSqIn - measure of pressure using the US system\n* @property {string}  KgPerSqCentimeter - measure of pressure using the metric system\n*\n* @property {string}  NewtonMeter - measure of torque using the metric system\n* @property {string}  GramForceCentimeter - measure of torque using the metric system\n* @property {string}  FootPound - measure of torque using the US system\n*\n* @property {string}  Microliter - measure of volume using the metric system\n* @property {string}  Milliliter - measure of volume using the metric system\n* @property {string}  Centiliter - measure of volume using the metric system\n* @property {string}  Deciliter - measure of volume using the metric system\n* @property {string}  Liter - measure of volume using the metric system\n* @property {string}  Ounce - measure of volume using the US system\n* @property {string}  Pint - measure of volume using the US system\n* @property {string}  Quart - measure of volume using the US system\n* @property {string}  Gallon - measure of volume using the US system\n*\n* @property {string} Gram - measure of mass in the metric system\n* @property {string} Microgram - measure of mass in the metric system\n* @property {string} Milligram - measure of mass in the metric system\n* @property {string} Kilogram - measure of mass in the metric system\n* @property {string} MetricTon - measure of mass in the metric system\n* @property {string} Ounce - measure of mass in the US system\n* @property {string} Pound - measure of mass in the US system\n* @property {string} Stone - measure of mass in old British terminology\n* @property {string} ImperialTon - a ton as defined by British Imperial units\n* @property {string} USTon - a ton as defined in the US\n* @property {string} grain - measure of mass in old Greek system terminology\n* @property {string} dram - measure of mass in old Greek system terminology\n* @property {string} TroyOunce - measure of mass in old Greek system terminology\n* @property {string} TroyPound - measure of mass in old Greek system terminology\n* @property {string} Pennyweight - measure of mass in old Greek and British terminology\n* @property {string} Kilopascal - measure of pressure.\n* @property {string} Megapascal - measure of pressure.\n* @property {string} PoundsPerSqIn - measure of pressure.\n* @property {string} KgPerSqCentimeter - measure of pressure.\n* @property {string} NewtonMeter - measure of torque.\n* @property {string} GramForceCentimeter - measure of torque.\n* @property {string} FootPound - measure of torque (US).\n* @property {string} Liter - measure of volume (metric).\n* @property {string} Microliter - measure of volume (metric).\n* @property {string} Milliliter - measure of volume (metric).\n* @property {string} Centiliter - measure of volume (metric).\n* @property {string} Deciliter - measure of volume (metric).\n* @property {string} FluidOunce - measure of volume (US).\n* @property {string} Pint - measure of volume (US).\n* @property {string} Quart - measure of volume (US).\n* @property {string} Gallon - measure of volume (US).\n* @property {string} Teaspoon - measure of volume (US, recipe).\n* @property {string} Tablespoon - measure of volume (US, recipe).\n* @property {string} Cup - measure of volume (US, recipe).\n* @property {string} Drop - measure of small volume (US, recipe). Defined as equal to 1 milliLiter\n* @property {string} Pinch - measure of small volume (US, recipe).\n* @property {string} Dash - measure of small volume (US, recipe).\n* @property {string} CubicMeter - measure of volume (metric).\n* @property {string} CubicCentimeter - measure of volume (metric).\n* @property {string} CubicFoot - measure of volume (US).\n* @property {string} CubicInch - measure of volume (US).\n* @property {string} Watt - measure of Power.\n* @property {string} Milliwatt - measure of Power.\n* @property {string} Kilowatt - measure of Power.\n* @property {string} Horsepower - measure of Power.\n*/","meta":{"range":[7260,9324],"filename":"UnitType.js","lineno":121,"columnno":4,"path":"/build/npm/src","code":{"id":"astnode100008784","name":"UnitType","type":"ObjectExpression","value":"{\"Count\":\"count\",\"Each\":\"ea\",\"Dozen\":\"doz\",\"Score\":\"score\",\"Brace\":\"brace\",\"Pair\":\"pair\",\"K\":\"k\",\"Meg\":\"meg\",\"Gig\":\"gig\",\"Lux\":\"lux\",\"Ampere\":\"a\",\"Milliampere\":\"ma\",\"Volt\":\"v\",\"Millivolt\":\"mv\",\"Kilovolt\":\"Kv\",\"Degree\":\"deg\",\"Radian\":\"rad\",\"Microsecond\":\"us\",\"Millisecond\":\"ms\",\"Second\":\"sec\",\"Minute\":\"min\",\"Hour\":\"hr\",\"Day\":\"dy\",\"Month\":\"mo\",\"Year\":\"yr\",\"Celsius\":\"C\",\"Fahrenheit\":\"F\",\"Kelvin\":\"klv\",\"Micrometer\":\"um\",\"Millimeter\":\"mm\",\"Centimeter\":\"cm\",\"Decimeter\":\"dm\",\"Meter\":\"m\",\"Hectometer\":\"Hm\",\"Kilometer\":\"Km\",\"OneHundredKm\":\"100Km\",\"Inch\":\"in\",\"Foot\":\"ft\",\"Yard\":\"yd\",\"Mile\":\"mi\",\"Gram\":\"g\",\"Microgram\":\"mcg\",\"Milligram\":\"mg\",\"Kilogram\":\"kg\",\"MetricTon\":\"mton\",\"Ounce\":\"oz\",\"Pound\":\"lb\",\"Stone\":\"st\",\"ImperialTon\":\"iton\",\"USTon\":\"uston\",\"Grain\":\"gr\",\"Dram\":\"dr\",\"TroyOunce\":\"oz t\",\"TroyPound\":\"lb t\",\"Pennyweight\":\"dwt\",\"Kilopascal\":\"Kpa\",\"Megapascal\":\"Mpa\",\"PoundsPerSqIn\":\"psi\",\"KgPerSqCentimeter\":\"kg/cm2\",\"NewtonMeter\":\"Nm\",\"GramForceCentimeter\":\"gfcm\",\"FootPound\":\"lbf\",\"Microliter\":\"ul\",\"Milliliter\":\"ml\",\"Centiliter\":\"cl\",\"Deciliter\":\"dl\",\"Liter\":\"l\",\"FluidOunce\":\"fl.oz\",\"Pint\":\"pt\",\"Quart\":\"qt\",\"Gallon\":\"gal\",\"Teaspoon\":\"tsp\",\"Tablespoon\":\"tbsp\",\"Cup\":\"cup\",\"Drop\":\"drop\",\"Pinch\":\"pinch\",\"Dash\":\"dash\",\"CubicMeter\":\"m3\",\"CubicCentimeter\":\"cm3\",\"CubicFoot\":\"ft3\",\"CubicInch\":\"in3\",\"Watt\":\"W\",\"Milliwatt\":\"mW\",\"Kilowatt\":\"KW\",\"Horsepower\":\"hp\"}"}},"description":"Contains the _canonical_ text tag abbreviations for UnitType values.\n_See {@link NameMapUnit} for a list of recognized synonyms for each canonical type._\n\nThese text tags are intentionally equivalent to the common abbreviated version of the\nunit name that can be found in `NameMapUnit`","alias":"UnitType","kind":"class","scope":"global","properties":[{"type":{"names":["string"]},"description":"count of physical entities","name":"Count"},{"type":{"names":["string"]},"description":"same as Count","name":"Each"},{"type":{"names":["string"]},"description":"12 Count","name":"Dozen"},{"type":{"names":["string"]},"description":"20 Count","name":"Score"},{"type":{"names":["string"]},"description":"2 Count","name":"Brace"},{"type":{"names":["string"]},"description":"2 Count","name":"Pair"},{"type":{"names":["string"]},"description":"1,000 Count","name":"K"},{"type":{"names":["string"]},"description":"1,000,000 Count","name":"Meg"},{"type":{"names":["string"]},"description":"1,000,000,000 Count","name":"Gig"},{"type":{"names":["string"]},"description":"measure of light intensity","name":"Lux"},{"type":{"names":["string"]},"description":"measure of electric current","name":"Ampere"},{"type":{"names":["string"]},"description":"measure of small electric current","name":"Milliampere"},{"type":{"names":["string"]},"description":"measure of electric voltage","name":"Volt"},{"type":{"names":["string"]},"description":"measure of small electric voltage","name":"Millivolt"},{"type":{"names":["string"]},"description":"measure of large electric voltage","name":"Kilovolt"},{"type":{"names":["string"]},"description":"measure angular distance","name":"Degree"},{"type":{"names":["string"]},"description":"measure angular distance based from pi","name":"Radian"},{"type":{"names":["string"]},"description":"measure of very short amount of elapsed time","name":"Microsecond"},{"type":{"names":["string"]},"description":"measure of short amount of elapsed time","name":"Millisecond"},{"type":{"names":["string"]},"description":"measure of an amount of elapsed time","name":"Second"},{"type":{"names":["string"]},"description":"measure of an amount of elapsed time equal to 60 seconds","name":"Minute"},{"type":{"names":["string"]},"description":"measure of an amount of elapsed time equal to 60 minutes","name":"Hour"},{"type":{"names":["string"]},"description":"measure of an amount of elapsed time equal to 24 hours","name":"Day"},{"type":{"names":["string"]},"description":"measure of an amount of elapsed time equal to 1/12th year","name":"Montrh"},{"type":{"names":["string"]},"description":"measure of an amount of elapsed time equal to 365 days","name":"Year"},{"type":{"names":["string"]},"description":"measure of temperature in the metric system","name":"Celsius"},{"type":{"names":["string"]},"description":"measure of temperature in the English system","name":"Fahrenheit"},{"type":{"names":["string"]},"description":"measure of temperature in terms from \"absolute zero\" in the metric system","name":"Kelvin"},{"type":{"names":["string"]},"description":"measure of distance using the metric system","name":"Micrometer"},{"type":{"names":["string"]},"description":"measure of distance using the metric system","name":"Millimeter"},{"type":{"names":["string"]},"description":"measure of distance using the metric system","name":"Centimeter"},{"type":{"names":["string"]},"description":"measure of distance using the metric system","name":"Meter"},{"type":{"names":["string"]},"description":"measure of distance using the metric system","name":"Hectometer"},{"type":{"names":["string"]},"description":"measure of distance using the metric system","name":"Kilometer"},{"type":{"names":["string"]},"description":"measure of distance (100 km) using the metric system","name":"OneHundredKm"},{"type":{"names":["string"]},"description":"measure of distance using the US system","name":"Inch"},{"type":{"names":["string"]},"description":"measure of distance using the US system","name":"Foot"},{"type":{"names":["string"]},"description":"measure of distance using the US system","name":"Yard"},{"type":{"names":["string"]},"description":"measure of distance using the US system","name":"Mile"},{"type":{"names":["string"]},"description":"measure of pressure using the metric system","name":"Kilopascal"},{"type":{"names":["string"]},"description":"measure of pressure using the metric system","name":"Megapascal"},{"type":{"names":["string"]},"description":"measure of pressure using the US system","name":"PoundsPerSqIn"},{"type":{"names":["string"]},"description":"measure of pressure using the metric system","name":"KgPerSqCentimeter"},{"type":{"names":["string"]},"description":"measure of torque using the metric system","name":"NewtonMeter"},{"type":{"names":["string"]},"description":"measure of torque using the metric system","name":"GramForceCentimeter"},{"type":{"names":["string"]},"description":"measure of torque using the US system","name":"FootPound"},{"type":{"names":["string"]},"description":"measure of volume using the metric system","name":"Microliter"},{"type":{"names":["string"]},"description":"measure of volume using the metric system","name":"Milliliter"},{"type":{"names":["string"]},"description":"measure of volume using the metric system","name":"Centiliter"},{"type":{"names":["string"]},"description":"measure of volume using the metric system","name":"Deciliter"},{"type":{"names":["string"]},"description":"measure of volume using the metric system","name":"Liter"},{"type":{"names":["string"]},"description":"measure of volume using the US system","name":"Ounce"},{"type":{"names":["string"]},"description":"measure of volume using the US system","name":"Pint"},{"type":{"names":["string"]},"description":"measure of volume using the US system","name":"Quart"},{"type":{"names":["string"]},"description":"measure of volume using the US system","name":"Gallon"},{"type":{"names":["string"]},"description":"measure of mass in the metric system","name":"Gram"},{"type":{"names":["string"]},"description":"measure of mass in the metric system","name":"Microgram"},{"type":{"names":["string"]},"description":"measure of mass in the metric system","name":"Milligram"},{"type":{"names":["string"]},"description":"measure of mass in the metric system","name":"Kilogram"},{"type":{"names":["string"]},"description":"measure of mass in the metric system","name":"MetricTon"},{"type":{"names":["string"]},"description":"measure of mass in the US system","name":"Ounce"},{"type":{"names":["string"]},"description":"measure of mass in the US system","name":"Pound"},{"type":{"names":["string"]},"description":"measure of mass in old British terminology","name":"Stone"},{"type":{"names":["string"]},"description":"a ton as defined by British Imperial units","name":"ImperialTon"},{"type":{"names":["string"]},"description":"a ton as defined in the US","name":"USTon"},{"type":{"names":["string"]},"description":"measure of mass in old Greek system terminology","name":"grain"},{"type":{"names":["string"]},"description":"measure of mass in old Greek system terminology","name":"dram"},{"type":{"names":["string"]},"description":"measure of mass in old Greek system terminology","name":"TroyOunce"},{"type":{"names":["string"]},"description":"measure of mass in old Greek system terminology","name":"TroyPound"},{"type":{"names":["string"]},"description":"measure of mass in old Greek and British terminology","name":"Pennyweight"},{"type":{"names":["string"]},"description":"measure of pressure.","name":"Kilopascal"},{"type":{"names":["string"]},"description":"measure of pressure.","name":"Megapascal"},{"type":{"names":["string"]},"description":"measure of pressure.","name":"PoundsPerSqIn"},{"type":{"names":["string"]},"description":"measure of pressure.","name":"KgPerSqCentimeter"},{"type":{"names":["string"]},"description":"measure of torque.","name":"NewtonMeter"},{"type":{"names":["string"]},"description":"measure of torque.","name":"GramForceCentimeter"},{"type":{"names":["string"]},"description":"measure of torque (US).","name":"FootPound"},{"type":{"names":["string"]},"description":"measure of volume (metric).","name":"Liter"},{"type":{"names":["string"]},"description":"measure of volume (metric).","name":"Microliter"},{"type":{"names":["string"]},"description":"measure of volume (metric).","name":"Milliliter"},{"type":{"names":["string"]},"description":"measure of volume (metric).","name":"Centiliter"},{"type":{"names":["string"]},"description":"measure of volume (metric).","name":"Deciliter"},{"type":{"names":["string"]},"description":"measure of volume (US).","name":"FluidOunce"},{"type":{"names":["string"]},"description":"measure of volume (US).","name":"Pint"},{"type":{"names":["string"]},"description":"measure of volume (US).","name":"Quart"},{"type":{"names":["string"]},"description":"measure of volume (US).","name":"Gallon"},{"type":{"names":["string"]},"description":"measure of volume (US, recipe).","name":"Teaspoon"},{"type":{"names":["string"]},"description":"measure of volume (US, recipe).","name":"Tablespoon"},{"type":{"names":["string"]},"description":"measure of volume (US, recipe).","name":"Cup"},{"type":{"names":["string"]},"description":"measure of small volume (US, recipe). Defined as equal to 1 milliLiter","name":"Drop"},{"type":{"names":["string"]},"description":"measure of small volume (US, recipe).","name":"Pinch"},{"type":{"names":["string"]},"description":"measure of small volume (US, recipe).","name":"Dash"},{"type":{"names":["string"]},"description":"measure of volume (metric).","name":"CubicMeter"},{"type":{"names":["string"]},"description":"measure of volume (metric).","name":"CubicCentimeter"},{"type":{"names":["string"]},"description":"measure of volume (US).","name":"CubicFoot"},{"type":{"names":["string"]},"description":"measure of volume (US).","name":"CubicInch"},{"type":{"names":["string"]},"description":"measure of Power.","name":"Watt"},{"type":{"names":["string"]},"description":"measure of Power.","name":"Milliwatt"},{"type":{"names":["string"]},"description":"measure of Power.","name":"Kilowatt"},{"type":{"names":["string"]},"description":"measure of Power.","name":"Horsepower"}],"name":"UnitType","longname":"UnitType","params":[]},{"comment":"","meta":{"range":[66,471],"filename":"npm-prep.js","lineno":4,"columnno":0,"path":"/build/script","code":{"id":"astnode100009439","name":"getConfig","type":"FunctionDeclaration","paramnames":[]},"vars":{"fn":"getConfig~fn","content":"getConfig~content","config_1":"getConfig~config_1"}},"undocumented":true,"name":"getConfig","longname":"getConfig","kind":"function","scope":"global","params":[]},{"comment":"","meta":{"range":[472,1182],"filename":"npm-prep.js","lineno":20,"columnno":0,"path":"/build/script","code":{"id":"astnode100009497","name":"copyFolderRecursiveSync","type":"FunctionDeclaration","paramnames":["source","target"]},"vars":{"files":"copyFolderRecursiveSync~files","targetFolder":"copyFolderRecursiveSync~targetFolder","":null}},"undocumented":true,"name":"copyFolderRecursiveSync","longname":"copyFolderRecursiveSync","kind":"function","scope":"global","params":[]},{"comment":"","meta":{"range":[1183,1773],"filename":"npm-prep.js","lineno":41,"columnno":0,"path":"/build/script","code":{"id":"astnode100009589","name":"removeDir","type":"FunctionDeclaration","paramnames":["dir"]},"vars":{"files":"removeDir~files","":null}},"undocumented":true,"name":"removeDir","longname":"removeDir","kind":"function","scope":"global","params":[]},{"comment":"","meta":{"range":[1774,2511],"filename":"npm-prep.js","lineno":60,"columnno":0,"path":"/build/script","code":{"id":"astnode100009678","name":"recurseCopy","type":"FunctionDeclaration","paramnames":["src","dest","recurse"]},"vars":{"files":"recurseCopy~files","":null}},"undocumented":true,"name":"recurseCopy","longname":"recurseCopy","kind":"function","scope":"global","params":[]},{"comment":"","meta":{"range":[2512,2773],"filename":"npm-prep.js","lineno":82,"columnno":0,"path":"/build/script","code":{"id":"astnode100009791","name":"fileCopy","type":"FunctionDeclaration","paramnames":["from","to"]},"vars":{"leadPath":"fileCopy~leadPath"}},"undocumented":true,"name":"fileCopy","longname":"fileCopy","kind":"function","scope":"global","params":[]},{"comment":"","meta":{"range":[2774,2922],"filename":"npm-prep.js","lineno":90,"columnno":0,"path":"/build/script","code":{"id":"astnode100009845","name":"copyFile","type":"FunctionDeclaration","paramnames":["f","src","dest"]},"vars":{"from":"copyFile~from","to":"copyFile~to"}},"undocumented":true,"name":"copyFile","longname":"copyFile","kind":"function","scope":"global","params":[]},{"comment":"","meta":{"range":[2923,3082],"filename":"npm-prep.js","lineno":95,"columnno":0,"path":"/build/script","code":{"id":"astnode100009882","name":"copyDir","type":"FunctionDeclaration","paramnames":["name","recursive","src","dest"]},"vars":{"from":"copyDir~from","to":"copyDir~to"}},"undocumented":true,"name":"copyDir","longname":"copyDir","kind":"function","scope":"global","params":[]},{"comment":"","meta":{"range":[3083,3564],"filename":"npm-prep.js","lineno":100,"columnno":0,"path":"/build/script","code":{"id":"astnode100009913","name":"copyActions","type":"FunctionDeclaration","paramnames":["config"]},"vars":{"copyActions":"copyActions~copyActions","":null}},"undocumented":true,"name":"copyActions","longname":"copyActions","kind":"function","scope":"global","params":[]},{"comment":"/**\n* @description\n* Lookup table for common measurements and their associated compositions\n*\n* ### Basic Ratios\n* | common abbr. | full name | instance type | numerator unit | denominator unit\n* | -----------  | --------  | ------------- | -------------- | ----------------\n* | ratio | generic ratio | Ratio | UnitType.Count | UnitType.Count\n* | deg/sec | degrees per second | Ratio | UnitType.Degree | UnitType.Second\n* | rpm | revolutions per minute | Ratio | UnitType.Count | UnitType.Minute\n*\n* ### Densities\n* | common abbr. | full name | instance type | numerator unit | denominator unit\n* | -----------  | --------  | ------------- | -------------- | ----------------\n* | g/cc | grams per cubic centimeter |  Density |  UnitType.Gram |  UnitType.Milliliter\n* | g/ml | grams per milliliter | Density, UnitType.Gram |  UnitType.Milliliter\n* | kg/l | kilograms per liter | Density, UnitType.Kilogram |  UnitType.Liter\n* | oz/fl.oz | ounces per fluid ounce |  Density |  UnitType.Ounce |  UnitType.FluidOunce\n* | lb/gal | pounds per gallon |  Density, UnitType.Pound |  UnitType.Gallon]\n* | g/tsp | grams per teaspoon |  Density, UnitType.Gram |  UnitType.Teaspoon\n* | g/tbsp | grams per tablespoon |  Density |  UnitType.Gram |  UnitType.Tablespoon\n\n*\n* ### speeds\n* | common abbr. | full name | instance type | numerator unit | denominator unit |\n* | -----------  | --------  | ------------- | -------------- | ---------------- |\n* | mph | miles per hour | Speed | UnitType.Mile | UnitType.Hour\n* | kph | kilometers per hour | Speed | UnitType.Kilometer | UnitType.Hour\n* | mps | meters per second | Speed | UnitType.Meter | UnitType.Second\n* | fps | feet per second | Speed | UnitType.Foot | UnitType.Second\n*\n* ### Fuel Efficiencies\n* | common abbr. | full name | instance type | numerator unit | denominator unit |\n* | -----------  | --------  | ------------- | -------------- | ---------------- |\n* | mpg | miles per gallon | FuelEfficiency | UnitType.Mile | UnitType.Gallon\n* | kpg | kilometers per gallon | FuelEfficiency |UnitType.Kilometer | UnitType.Gallon\n* | kpl | kilometers per liter | FuelEfficiency | UnitType.Kilometer | UnitType.Liter\n* | mpl | meters per liter | FuelEfficiency | UnitType.Meter | UnitType.Liter\n* | l/100km | liters per 100km | FuelEfficiency | UnitType.OneHundredKm | UnitType.Liter\n*\n* ### Accelerations\n* | common abbr. | full name | instance type | numerator unit | denominator unit |\n* | -----------  | --------  | ------------- | -------------- | ---------------- |\n* | m/s2 | meters per second squared | Acceleration | UnitType.Meter | UnitType.Second\n* | mps/sec | meters per second squared | Acceleration | UnitType.Meter | UnitType.Second\n* | ft/s2 | feet per second squared | Acceleration | UnitType.Foot | UnitType.Second\n* | fps/sec | feet per second squared | Acceleration | UnitType.Foot | UnitType.Second\n*\n* @alias NameMapRatio\n* @class\n*/","meta":{"range":[3417,8171],"filename":"NameMapRatio.js","lineno":62,"columnno":4,"path":"/build/src","code":{"id":"astnode100010065","name":"NameMapRatio","type":"ObjectExpression","value":"{\"undefined\":\"\",\"makeFrom\":\"\"}"}},"description":"Lookup table for common measurements and their associated compositions\n\n### Basic Ratios\n| common abbr. | full name | instance type | numerator unit | denominator unit\n| -----------  | --------  | ------------- | -------------- | ----------------\n| ratio | generic ratio | Ratio | UnitType.Count | UnitType.Count\n| deg/sec | degrees per second | Ratio | UnitType.Degree | UnitType.Second\n| rpm | revolutions per minute | Ratio | UnitType.Count | UnitType.Minute\n\n### Densities\n| common abbr. | full name | instance type | numerator unit | denominator unit\n| -----------  | --------  | ------------- | -------------- | ----------------\n| g/cc | grams per cubic centimeter |  Density |  UnitType.Gram |  UnitType.Milliliter\n| g/ml | grams per milliliter | Density, UnitType.Gram |  UnitType.Milliliter\n| kg/l | kilograms per liter | Density, UnitType.Kilogram |  UnitType.Liter\n| oz/fl.oz | ounces per fluid ounce |  Density |  UnitType.Ounce |  UnitType.FluidOunce\n| lb/gal | pounds per gallon |  Density, UnitType.Pound |  UnitType.Gallon]\n| g/tsp | grams per teaspoon |  Density, UnitType.Gram |  UnitType.Teaspoon\n| g/tbsp | grams per tablespoon |  Density |  UnitType.Gram |  UnitType.Tablespoon\n\n### speeds\n| common abbr. | full name | instance type | numerator unit | denominator unit |\n| -----------  | --------  | ------------- | -------------- | ---------------- |\n| mph | miles per hour | Speed | UnitType.Mile | UnitType.Hour\n| kph | kilometers per hour | Speed | UnitType.Kilometer | UnitType.Hour\n| mps | meters per second | Speed | UnitType.Meter | UnitType.Second\n| fps | feet per second | Speed | UnitType.Foot | UnitType.Second\n\n### Fuel Efficiencies\n| common abbr. | full name | instance type | numerator unit | denominator unit |\n| -----------  | --------  | ------------- | -------------- | ---------------- |\n| mpg | miles per gallon | FuelEfficiency | UnitType.Mile | UnitType.Gallon\n| kpg | kilometers per gallon | FuelEfficiency |UnitType.Kilometer | UnitType.Gallon\n| kpl | kilometers per liter | FuelEfficiency | UnitType.Kilometer | UnitType.Liter\n| mpl | meters per liter | FuelEfficiency | UnitType.Meter | UnitType.Liter\n| l/100km | liters per 100km | FuelEfficiency | UnitType.OneHundredKm | UnitType.Liter\n\n### Accelerations\n| common abbr. | full name | instance type | numerator unit | denominator unit |\n| -----------  | --------  | ------------- | -------------- | ---------------- |\n| m/s2 | meters per second squared | Acceleration | UnitType.Meter | UnitType.Second\n| mps/sec | meters per second squared | Acceleration | UnitType.Meter | UnitType.Second\n| ft/s2 | feet per second squared | Acceleration | UnitType.Foot | UnitType.Second\n| fps/sec | feet per second squared | Acceleration | UnitType.Foot | UnitType.Second","alias":"NameMapRatio","kind":"class","name":"NameMapRatio","longname":"NameMapRatio","scope":"global","params":[]},{"comment":"/**\n* Creates an appropriate compound Measure Ratio object for the given name and values\n*\n* @param {string} ratioName     Name of the ratio to match to\n* @param {number} value1        Value of the ratio, or the value of the numerator\n* @param {number} [value2=1]    Value of the denominator or undefined - to avoid a dangerous division by zero\n* @function makeFrom\n*\n* @returns {Ratio}\n*\n* @example\n*  let mySpeed = NameMapRatio.makeFrom('mph', 60, 1)\n*  let myMPG = NameMapRatio.makeFrom('mpg', 400, 14.5)\n*  mySpeed.getValue() // 60\n*  myMPG.getValue() // 27.59\n*\n*/","meta":{"filename":"NameMapRatio.js","lineno":93,"columnno":4,"path":"/build/src","code":{}},"description":"Creates an appropriate compound Measure Ratio object for the given name and values","params":[{"type":{"names":["string"]},"description":"Name of the ratio to match to","name":"ratioName"},{"type":{"names":["number"]},"description":"Value of the ratio, or the value of the numerator","name":"value1"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"Value of the denominator or undefined - to avoid a dangerous division by zero","name":"value2"}],"kind":"function","name":"makeFrom","returns":[{"type":{"names":["Ratio"]}}],"examples":["let mySpeed = NameMapRatio.makeFrom('mph', 60, 1)\n let myMPG = NameMapRatio.makeFrom('mpg', 400, 14.5)\n mySpeed.getValue() // 60\n myMPG.getValue() // 27.59"],"longname":"makeFrom","scope":"global"},{"comment":"/**\n* Creates an appropriate compound Measure Ratio object for the given name and values\n*\n* @param {string} ratioName     Name of the ratio to match to\n* @param {number} value1        Value of the ratio, or the value of the numerator\n* @param {number} [value2=1]    Value of the denominator or undefined - to avoid a dangerous division by zero\n* @function makeFrom\n*\n* @returns {Ratio}\n*\n* @example\n*  let mySpeed = NameMapRatio.makeFrom('mph', 60, 1)\n*  let myMPG = NameMapRatio.makeFrom('mpg', 400, 14.5)\n*  mySpeed.getValue() // 60\n*  myMPG.getValue() // 27.59\n*\n*/","meta":{"range":[6983,8169],"filename":"NameMapRatio.js","lineno":110,"columnno":4,"path":"/build/src","code":{"id":"astnode100010468","name":"makeFrom","type":"FunctionExpression"},"vars":{"value1":"NameMapRatio.makeFrom~value1","value2":"NameMapRatio.makeFrom~value2","n":"NameMapRatio.makeFrom~n","fullname":"NameMapRatio.makeFrom~fullname","ratioClass":"NameMapRatio.makeFrom~ratioClass","numType":"NameMapRatio.makeFrom~numType","denType":"NameMapRatio.makeFrom~denType"}},"undocumented":true,"name":"makeFrom","longname":"NameMapRatio.makeFrom","kind":"function","memberof":"NameMapRatio","scope":"static"},{"comment":"/**\n* @description\n* Finds the canonical UnitType measure for one of the mapped synonyms\n*\n* @param  {string}  unitIn - Unit string to match to a canonical UnitType\n* @returns {string}        Equivalent UnitType, or undefined\n*\n* @example\n*  let abbrevIn = 'cf'\n*  let canonType = NameMapUnit.resolveSynonym(abbrevIn)\n*  // canonType === UnitType.CubicFoot === 'ft3'\n*/","meta":{"range":[29389,29490],"filename":"NameMapUnit.js","lineno":630,"columnno":4,"path":"/build/src","code":{"id":"astnode100012349","name":"resolveSynonym","type":"FunctionExpression"}},"description":"Finds the canonical UnitType measure for one of the mapped synonyms","params":[{"type":{"names":["string"]},"description":"Unit string to match to a canonical UnitType","name":"unitIn"}],"returns":[{"type":{"names":["string"]},"description":"Equivalent UnitType, or undefined"}],"examples":["let abbrevIn = 'cf'\n let canonType = NameMapUnit.resolveSynonym(abbrevIn)\n // canonType === UnitType.CubicFoot === 'ft3'"],"name":"resolveSynonym","longname":"NameMapUnit.resolveSynonym","kind":"function","memberof":"NameMapUnit","scope":"static"},{"comment":"/**\n* @description\n* Sets the provided Measure value with a new value expressed in a value that may be a synonym\n*\n* @param measure   {Measure} The Measure object to set\n* @param unitIn    {string} The unit to match to a canonical UnitType and set value as\n* @param value     {number} The value to set\n*\n* @example\n*  let myMeasure = new Length()\n*  NameMapUnit.setMeasureAs(myMeasure, 'feet', 6.4)\n*/","meta":{"range":[29957,30083],"filename":"NameMapUnit.js","lineno":645,"columnno":4,"path":"/build/src","code":{"id":"astnode100012362","name":"setMeasureAs","type":"FunctionExpression"}},"description":"Sets the provided Measure value with a new value expressed in a value that may be a synonym","params":[{"type":{"names":["Measure"]},"description":"The Measure object to set","name":"measure"},{"type":{"names":["string"]},"description":"The unit to match to a canonical UnitType and set value as","name":"unitIn"},{"type":{"names":["number"]},"description":"The value to set","name":"value"}],"examples":["let myMeasure = new Length()\n NameMapUnit.setMeasureAs(myMeasure, 'feet', 6.4)"],"name":"setMeasureAs","longname":"NameMapUnit.setMeasureAs","kind":"function","memberof":"NameMapUnit","scope":"static"},{"comment":"/**\n* @description\n* Returns the value of the provided Measure in units expressed by the resolved synonym\n*\n* @param measure   {Measure} The Measure object to read\n* @param unitIn    {string} The unit to match to a canonical UnitType for value\n* @returns {number}  The value of this measure in resolved UnitType\n*\n* @example:\n*  let myMeasure = new Length(UnitType.Inch, 27)\n*  let feet = NameMapUnit.getMeasureAs(myMeasure, 'feet')\n*/","meta":{"range":[30584,30703],"filename":"NameMapUnit.js","lineno":660,"columnno":4,"path":"/build/src","code":{"id":"astnode100012379","name":"getMeasureAs","type":"FunctionExpression"}},"description":"Returns the value of the provided Measure in units expressed by the resolved synonym","params":[{"type":{"names":["Measure"]},"description":"The Measure object to read","name":"measure"},{"type":{"names":["string"]},"description":"The unit to match to a canonical UnitType for value","name":"unitIn"}],"returns":[{"type":{"names":["number"]},"description":"The value of this measure in resolved UnitType"}],"tags":[{"originalTitle":"example:","title":"example:","text":"let myMeasure = new Length(UnitType.Inch, 27)\n let feet = NameMapUnit.getMeasureAs(myMeasure, 'feet')","value":"let myMeasure = new Length(UnitType.Inch, 27)\n let feet = NameMapUnit.getMeasureAs(myMeasure, 'feet')"}],"name":"getMeasureAs","longname":"NameMapUnit.getMeasureAs","kind":"function","memberof":"NameMapUnit","scope":"static"},{"comment":"/**\n* Creates a unit of the given type\n*\n* @param unitTypeString\n* @param initialValue\n* @returns {Measure}\n* @throws {Error} if unit type is unknown\n*\n* @example\n* let myMeasure = UnitFactory.createUnitObject('tsp', 7)\n* let asOz = myMeasure.getValueAs('fl.oz')\n* console.log(`7 teaspoons is ${asOz} fluid ounces`)\n*/","meta":{"range":[1420,6751],"filename":"UnitFactory.js","lineno":40,"columnno":4,"path":"/build/src","code":{"id":"astnode100018106","name":"createUnitObject","type":"FunctionExpression"},"vars":{"initialValue":"UnitFactory.createUnitObject~initialValue","unitType":"UnitFactory.createUnitObject~unitType","measure":"UnitFactory.createUnitObject~measure"}},"description":"Creates a unit of the given type","params":[{"name":"unitTypeString"},{"name":"initialValue"}],"returns":[{"type":{"names":["Measure"]}}],"exceptions":[{"type":{"names":["Error"]},"description":"if unit type is unknown"}],"examples":["let myMeasure = UnitFactory.createUnitObject('tsp', 7)\nlet asOz = myMeasure.getValueAs('fl.oz')\nconsole.log(`7 teaspoons is ${asOz} fluid ounces`)"],"name":"createUnitObject","longname":"UnitFactory.createUnitObject","kind":"function","memberof":"UnitFactory","scope":"static"},{"comment":"/**\n* Contains the _canonical_ text tag abbreviations for UnitType values.\n* _See {@link NameMapUnit} for a list of recognized synonyms for each canonical type._\n*\n* These text tags are intentionally equivalent to the common abbreviated version of the\n* unit name that can be found in `NameMapUnit`\n*\n* @alias UnitType\n* @class\n* @static\n*\n* @property {string}  Count - count of physical entities\n* @property {string}  Each - same as Count\n* @property {string}  Dozen - 12 Count\n* @property {string}  Score - 20 Count\n* @property {string}  Brace - 2 Count\n* @property {string}  Pair -  2 Count\n* @property {string}  K - 1,000 Count\n* @property {string}  Meg - 1,000,000 Count\n* @property {string}  Gig - 1,000,000,000 Count\n* @property {string}  Lux - measure of light intensity\n* @property {string}  Ampere - measure of electric current\n* @property {string}  Milliampere - measure of small electric current\n* @property {string}  Volt - measure of electric voltage\n* @property {string}  Millivolt - measure of small electric voltage\n* @property {string}  Kilovolt - measure of large electric voltage\n* @property {string}  Degree - measure angular distance\n* @property {string}  Radian - measure angular distance based from pi\n* @property {string}  Microsecond - measure of very short amount of elapsed time\n* @property {string}  Millisecond - measure of short amount of elapsed time\n* @property {string}  Second - measure of an amount of elapsed time\n* @property {string}  Minute - measure of an amount of elapsed time equal to 60 seconds\n* @property {string}  Hour - measure of an amount of elapsed time equal to 60 minutes\n* @property {string}  Day - measure of an amount of elapsed time equal to 24 hours\n* @property {string}  Montrh - measure of an amount of elapsed time equal to 1/12th year\n* @property {string}  Year - measure of an amount of elapsed time equal to 365 days\n*\n* @property {string}  Celsius - measure of temperature in the metric system\n* @property {string}  Fahrenheit - measure of temperature in the English system\n* @property {string}  Kelvin - measure of temperature in terms from \"absolute zero\" in the metric system\n* @property {string}  Micrometer - measure of distance using the metric system\n* @property {string}  Millimeter - measure of distance using the metric system\n* @property {string}  Centimeter - measure of distance using the metric system\n* @property {string}  Meter - measure of distance using the metric system\n* @property {string}  Hectometer - measure of distance using the metric system\n* @property {string}  Kilometer - measure of distance using the metric system\n* @property {string}  OneHundredKm - measure of distance (100 km) using the metric system\n*\n* @property {string}  Inch - measure of distance using the US system\n* @property {string}  Foot - measure of distance using the US system\n* @property {string}  Yard -measure of distance using the US system\n* @property {string}  Mile - measure of distance using the US system\n*\n* @property {string}  Kilopascal - measure of pressure using the metric system\n* @property {string}  Megapascal - measure of pressure using the metric system\n* @property {string}  PoundsPerSqIn - measure of pressure using the US system\n* @property {string}  KgPerSqCentimeter - measure of pressure using the metric system\n*\n* @property {string}  NewtonMeter - measure of torque using the metric system\n* @property {string}  GramForceCentimeter - measure of torque using the metric system\n* @property {string}  FootPound - measure of torque using the US system\n*\n* @property {string}  Microliter - measure of volume using the metric system\n* @property {string}  Milliliter - measure of volume using the metric system\n* @property {string}  Centiliter - measure of volume using the metric system\n* @property {string}  Deciliter - measure of volume using the metric system\n* @property {string}  Liter - measure of volume using the metric system\n* @property {string}  Ounce - measure of volume using the US system\n* @property {string}  Pint - measure of volume using the US system\n* @property {string}  Quart - measure of volume using the US system\n* @property {string}  Gallon - measure of volume using the US system\n*\n* @property {string} Gram - measure of mass in the metric system\n* @property {string} Microgram - measure of mass in the metric system\n* @property {string} Milligram - measure of mass in the metric system\n* @property {string} Kilogram - measure of mass in the metric system\n* @property {string} MetricTon - measure of mass in the metric system\n* @property {string} Ounce - measure of mass in the US system\n* @property {string} Pound - measure of mass in the US system\n* @property {string} Stone - measure of mass in old British terminology\n* @property {string} ImperialTon - a ton as defined by British Imperial units\n* @property {string} USTon - a ton as defined in the US\n* @property {string} grain - measure of mass in old Greek system terminology\n* @property {string} dram - measure of mass in old Greek system terminology\n* @property {string} TroyOunce - measure of mass in old Greek system terminology\n* @property {string} TroyPound - measure of mass in old Greek system terminology\n* @property {string} Pennyweight - measure of mass in old Greek and British terminology\n* @property {string} Kilopascal - measure of pressure.\n* @property {string} Megapascal - measure of pressure.\n* @property {string} PoundsPerSqIn - measure of pressure.\n* @property {string} KgPerSqCentimeter - measure of pressure.\n* @property {string} NewtonMeter - measure of torque.\n* @property {string} GramForceCentimeter - measure of torque.\n* @property {string} FootPound - measure of torque (US).\n* @property {string} Liter - measure of volume (metric).\n* @property {string} Microliter - measure of volume (metric).\n* @property {string} Milliliter - measure of volume (metric).\n* @property {string} Centiliter - measure of volume (metric).\n* @property {string} Deciliter - measure of volume (metric).\n* @property {string} FluidOunce - measure of volume (US).\n* @property {string} Pint - measure of volume (US).\n* @property {string} Quart - measure of volume (US).\n* @property {string} Gallon - measure of volume (US).\n* @property {string} Teaspoon - measure of volume (US, recipe).\n* @property {string} Tablespoon - measure of volume (US, recipe).\n* @property {string} Cup - measure of volume (US, recipe).\n* @property {string} Drop - measure of small volume (US, recipe). Defined as equal to 1 milliLiter\n* @property {string} Pinch - measure of small volume (US, recipe).\n* @property {string} Dash - measure of small volume (US, recipe).\n* @property {string} CubicMeter - measure of volume (metric).\n* @property {string} CubicCentimeter - measure of volume (metric).\n* @property {string} CubicFoot - measure of volume (US).\n* @property {string} CubicInch - measure of volume (US).\n* @property {string} Watt - measure of Power.\n* @property {string} Milliwatt - measure of Power.\n* @property {string} Kilowatt - measure of Power.\n* @property {string} Horsepower - measure of Power.\n*/","meta":{"range":[7260,9324],"filename":"UnitType.js","lineno":121,"columnno":4,"path":"/build/src","code":{"id":"astnode100018798","name":"UnitType","type":"ObjectExpression","value":"{\"Count\":\"count\",\"Each\":\"ea\",\"Dozen\":\"doz\",\"Score\":\"score\",\"Brace\":\"brace\",\"Pair\":\"pair\",\"K\":\"k\",\"Meg\":\"meg\",\"Gig\":\"gig\",\"Lux\":\"lux\",\"Ampere\":\"a\",\"Milliampere\":\"ma\",\"Volt\":\"v\",\"Millivolt\":\"mv\",\"Kilovolt\":\"Kv\",\"Degree\":\"deg\",\"Radian\":\"rad\",\"Microsecond\":\"us\",\"Millisecond\":\"ms\",\"Second\":\"sec\",\"Minute\":\"min\",\"Hour\":\"hr\",\"Day\":\"dy\",\"Month\":\"mo\",\"Year\":\"yr\",\"Celsius\":\"C\",\"Fahrenheit\":\"F\",\"Kelvin\":\"klv\",\"Micrometer\":\"um\",\"Millimeter\":\"mm\",\"Centimeter\":\"cm\",\"Decimeter\":\"dm\",\"Meter\":\"m\",\"Hectometer\":\"Hm\",\"Kilometer\":\"Km\",\"OneHundredKm\":\"100Km\",\"Inch\":\"in\",\"Foot\":\"ft\",\"Yard\":\"yd\",\"Mile\":\"mi\",\"Gram\":\"g\",\"Microgram\":\"mcg\",\"Milligram\":\"mg\",\"Kilogram\":\"kg\",\"MetricTon\":\"mton\",\"Ounce\":\"oz\",\"Pound\":\"lb\",\"Stone\":\"st\",\"ImperialTon\":\"iton\",\"USTon\":\"uston\",\"Grain\":\"gr\",\"Dram\":\"dr\",\"TroyOunce\":\"oz t\",\"TroyPound\":\"lb t\",\"Pennyweight\":\"dwt\",\"Kilopascal\":\"Kpa\",\"Megapascal\":\"Mpa\",\"PoundsPerSqIn\":\"psi\",\"KgPerSqCentimeter\":\"kg/cm2\",\"NewtonMeter\":\"Nm\",\"GramForceCentimeter\":\"gfcm\",\"FootPound\":\"lbf\",\"Microliter\":\"ul\",\"Milliliter\":\"ml\",\"Centiliter\":\"cl\",\"Deciliter\":\"dl\",\"Liter\":\"l\",\"FluidOunce\":\"fl.oz\",\"Pint\":\"pt\",\"Quart\":\"qt\",\"Gallon\":\"gal\",\"Teaspoon\":\"tsp\",\"Tablespoon\":\"tbsp\",\"Cup\":\"cup\",\"Drop\":\"drop\",\"Pinch\":\"pinch\",\"Dash\":\"dash\",\"CubicMeter\":\"m3\",\"CubicCentimeter\":\"cm3\",\"CubicFoot\":\"ft3\",\"CubicInch\":\"in3\",\"Watt\":\"W\",\"Milliwatt\":\"mW\",\"Kilowatt\":\"KW\",\"Horsepower\":\"hp\"}"}},"description":"Contains the _canonical_ text tag abbreviations for UnitType values.\n_See {@link NameMapUnit} for a list of recognized synonyms for each canonical type._\n\nThese text tags are intentionally equivalent to the common abbreviated version of the\nunit name that can be found in `NameMapUnit`","alias":"UnitType","kind":"class","scope":"global","properties":[{"type":{"names":["string"]},"description":"count of physical entities","name":"Count"},{"type":{"names":["string"]},"description":"same as Count","name":"Each"},{"type":{"names":["string"]},"description":"12 Count","name":"Dozen"},{"type":{"names":["string"]},"description":"20 Count","name":"Score"},{"type":{"names":["string"]},"description":"2 Count","name":"Brace"},{"type":{"names":["string"]},"description":"2 Count","name":"Pair"},{"type":{"names":["string"]},"description":"1,000 Count","name":"K"},{"type":{"names":["string"]},"description":"1,000,000 Count","name":"Meg"},{"type":{"names":["string"]},"description":"1,000,000,000 Count","name":"Gig"},{"type":{"names":["string"]},"description":"measure of light intensity","name":"Lux"},{"type":{"names":["string"]},"description":"measure of electric current","name":"Ampere"},{"type":{"names":["string"]},"description":"measure of small electric current","name":"Milliampere"},{"type":{"names":["string"]},"description":"measure of electric voltage","name":"Volt"},{"type":{"names":["string"]},"description":"measure of small electric voltage","name":"Millivolt"},{"type":{"names":["string"]},"description":"measure of large electric voltage","name":"Kilovolt"},{"type":{"names":["string"]},"description":"measure angular distance","name":"Degree"},{"type":{"names":["string"]},"description":"measure angular distance based from pi","name":"Radian"},{"type":{"names":["string"]},"description":"measure of very short amount of elapsed time","name":"Microsecond"},{"type":{"names":["string"]},"description":"measure of short amount of elapsed time","name":"Millisecond"},{"type":{"names":["string"]},"description":"measure of an amount of elapsed time","name":"Second"},{"type":{"names":["string"]},"description":"measure of an amount of elapsed time equal to 60 seconds","name":"Minute"},{"type":{"names":["string"]},"description":"measure of an amount of elapsed time equal to 60 minutes","name":"Hour"},{"type":{"names":["string"]},"description":"measure of an amount of elapsed time equal to 24 hours","name":"Day"},{"type":{"names":["string"]},"description":"measure of an amount of elapsed time equal to 1/12th year","name":"Montrh"},{"type":{"names":["string"]},"description":"measure of an amount of elapsed time equal to 365 days","name":"Year"},{"type":{"names":["string"]},"description":"measure of temperature in the metric system","name":"Celsius"},{"type":{"names":["string"]},"description":"measure of temperature in the English system","name":"Fahrenheit"},{"type":{"names":["string"]},"description":"measure of temperature in terms from \"absolute zero\" in the metric system","name":"Kelvin"},{"type":{"names":["string"]},"description":"measure of distance using the metric system","name":"Micrometer"},{"type":{"names":["string"]},"description":"measure of distance using the metric system","name":"Millimeter"},{"type":{"names":["string"]},"description":"measure of distance using the metric system","name":"Centimeter"},{"type":{"names":["string"]},"description":"measure of distance using the metric system","name":"Meter"},{"type":{"names":["string"]},"description":"measure of distance using the metric system","name":"Hectometer"},{"type":{"names":["string"]},"description":"measure of distance using the metric system","name":"Kilometer"},{"type":{"names":["string"]},"description":"measure of distance (100 km) using the metric system","name":"OneHundredKm"},{"type":{"names":["string"]},"description":"measure of distance using the US system","name":"Inch"},{"type":{"names":["string"]},"description":"measure of distance using the US system","name":"Foot"},{"type":{"names":["string"]},"description":"measure of distance using the US system","name":"Yard"},{"type":{"names":["string"]},"description":"measure of distance using the US system","name":"Mile"},{"type":{"names":["string"]},"description":"measure of pressure using the metric system","name":"Kilopascal"},{"type":{"names":["string"]},"description":"measure of pressure using the metric system","name":"Megapascal"},{"type":{"names":["string"]},"description":"measure of pressure using the US system","name":"PoundsPerSqIn"},{"type":{"names":["string"]},"description":"measure of pressure using the metric system","name":"KgPerSqCentimeter"},{"type":{"names":["string"]},"description":"measure of torque using the metric system","name":"NewtonMeter"},{"type":{"names":["string"]},"description":"measure of torque using the metric system","name":"GramForceCentimeter"},{"type":{"names":["string"]},"description":"measure of torque using the US system","name":"FootPound"},{"type":{"names":["string"]},"description":"measure of volume using the metric system","name":"Microliter"},{"type":{"names":["string"]},"description":"measure of volume using the metric system","name":"Milliliter"},{"type":{"names":["string"]},"description":"measure of volume using the metric system","name":"Centiliter"},{"type":{"names":["string"]},"description":"measure of volume using the metric system","name":"Deciliter"},{"type":{"names":["string"]},"description":"measure of volume using the metric system","name":"Liter"},{"type":{"names":["string"]},"description":"measure of volume using the US system","name":"Ounce"},{"type":{"names":["string"]},"description":"measure of volume using the US system","name":"Pint"},{"type":{"names":["string"]},"description":"measure of volume using the US system","name":"Quart"},{"type":{"names":["string"]},"description":"measure of volume using the US system","name":"Gallon"},{"type":{"names":["string"]},"description":"measure of mass in the metric system","name":"Gram"},{"type":{"names":["string"]},"description":"measure of mass in the metric system","name":"Microgram"},{"type":{"names":["string"]},"description":"measure of mass in the metric system","name":"Milligram"},{"type":{"names":["string"]},"description":"measure of mass in the metric system","name":"Kilogram"},{"type":{"names":["string"]},"description":"measure of mass in the metric system","name":"MetricTon"},{"type":{"names":["string"]},"description":"measure of mass in the US system","name":"Ounce"},{"type":{"names":["string"]},"description":"measure of mass in the US system","name":"Pound"},{"type":{"names":["string"]},"description":"measure of mass in old British terminology","name":"Stone"},{"type":{"names":["string"]},"description":"a ton as defined by British Imperial units","name":"ImperialTon"},{"type":{"names":["string"]},"description":"a ton as defined in the US","name":"USTon"},{"type":{"names":["string"]},"description":"measure of mass in old Greek system terminology","name":"grain"},{"type":{"names":["string"]},"description":"measure of mass in old Greek system terminology","name":"dram"},{"type":{"names":["string"]},"description":"measure of mass in old Greek system terminology","name":"TroyOunce"},{"type":{"names":["string"]},"description":"measure of mass in old Greek system terminology","name":"TroyPound"},{"type":{"names":["string"]},"description":"measure of mass in old Greek and British terminology","name":"Pennyweight"},{"type":{"names":["string"]},"description":"measure of pressure.","name":"Kilopascal"},{"type":{"names":["string"]},"description":"measure of pressure.","name":"Megapascal"},{"type":{"names":["string"]},"description":"measure of pressure.","name":"PoundsPerSqIn"},{"type":{"names":["string"]},"description":"measure of pressure.","name":"KgPerSqCentimeter"},{"type":{"names":["string"]},"description":"measure of torque.","name":"NewtonMeter"},{"type":{"names":["string"]},"description":"measure of torque.","name":"GramForceCentimeter"},{"type":{"names":["string"]},"description":"measure of torque (US).","name":"FootPound"},{"type":{"names":["string"]},"description":"measure of volume (metric).","name":"Liter"},{"type":{"names":["string"]},"description":"measure of volume (metric).","name":"Microliter"},{"type":{"names":["string"]},"description":"measure of volume (metric).","name":"Milliliter"},{"type":{"names":["string"]},"description":"measure of volume (metric).","name":"Centiliter"},{"type":{"names":["string"]},"description":"measure of volume (metric).","name":"Deciliter"},{"type":{"names":["string"]},"description":"measure of volume (US).","name":"FluidOunce"},{"type":{"names":["string"]},"description":"measure of volume (US).","name":"Pint"},{"type":{"names":["string"]},"description":"measure of volume (US).","name":"Quart"},{"type":{"names":["string"]},"description":"measure of volume (US).","name":"Gallon"},{"type":{"names":["string"]},"description":"measure of volume (US, recipe).","name":"Teaspoon"},{"type":{"names":["string"]},"description":"measure of volume (US, recipe).","name":"Tablespoon"},{"type":{"names":["string"]},"description":"measure of volume (US, recipe).","name":"Cup"},{"type":{"names":["string"]},"description":"measure of small volume (US, recipe). Defined as equal to 1 milliLiter","name":"Drop"},{"type":{"names":["string"]},"description":"measure of small volume (US, recipe).","name":"Pinch"},{"type":{"names":["string"]},"description":"measure of small volume (US, recipe).","name":"Dash"},{"type":{"names":["string"]},"description":"measure of volume (metric).","name":"CubicMeter"},{"type":{"names":["string"]},"description":"measure of volume (metric).","name":"CubicCentimeter"},{"type":{"names":["string"]},"description":"measure of volume (US).","name":"CubicFoot"},{"type":{"names":["string"]},"description":"measure of volume (US).","name":"CubicInch"},{"type":{"names":["string"]},"description":"measure of Power.","name":"Watt"},{"type":{"names":["string"]},"description":"measure of Power.","name":"Milliwatt"},{"type":{"names":["string"]},"description":"measure of Power.","name":"Kilowatt"},{"type":{"names":["string"]},"description":"measure of Power.","name":"Horsepower"}],"name":"UnitType","longname":"UnitType","params":[]}]}